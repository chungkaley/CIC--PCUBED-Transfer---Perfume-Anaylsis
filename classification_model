import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import accuracy_score, classification_report
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Load dataset
df = pd.read_csv('data2.csv')
print("Shape of DataFrame:", df.shape)
print("Column names:", df.columns)
print("Data types:\n", df.dtypes)
print("Summary statistics:\n", df.describe())

# Check for missing values
missing_values = df.isnull().sum()
print("Missing Values:\n", missing_values)

# Handle missing values
df['brand'].fillna('Unknown', inplace=True)
df['type'].fillna('Other', inplace=True)
df['available'].fillna(df['available'].median(), inplace=True)
df['availableText'].fillna('Not Specified', inplace=True)
df['lastUpdated'].fillna('Unknown', inplace=True)
df.dropna(subset=['sold'], inplace=True)

# Print updated missing values
missing_values = df.isnull().sum()
print("Missing Values After Cleaning:\n", missing_values)

# Sales statistics
print("Lowest Sold:", df['sold'].min())
print("Highest Sold:", df['sold'].max())
print("Mean Sold:", df['sold'].mean())
print("25th Percentile (Q1):", df['sold'].quantile(0.25))
print("75th Percentile (Q3):", df['sold'].quantile(0.75))

# Convert sold to binary class
df['sales_class'] = df['sold'].apply(lambda x: 'High' if x > 263 else 'Low')
df['sales_class_binary'] = df['sales_class'].map({'Low': 0, 'High': 1})

# Encode categorical columns
label_encoders = {}
for col in ['brand', 'type', 'itemLocation']:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])
    label_encoders[col] = le
